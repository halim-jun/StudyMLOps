name: Lint and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache Poetry
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/pypoetry
          ~/.cache/pip
        key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          ${{ runner.os }}-poetry-
    
    - name: Install Poetry
      run: |
        python -m pip install --upgrade pip
        python -m pip install pipx
        pipx install poetry

    - name: Install dependencies (Poetry with dev, no project install)
      run: |
        poetry --version
        poetry install --no-root --with dev
    
    - name: Run Black (code formatter)
      run: |
        poetry run black --check --diff project/
    
    # - name: Run isort (import sorter)
      # run: |
        # poetry run isort --check-only --diff project/
    
    # - name: Run Pylint
      # run: |
        # poetry run pylint project/ --fail-under=7.0
    
    # - name: Run Flake8
      # run: |
        # poetry run flake8 project/ --max-line-length=100
    
    - name: Run MyPy (type checker)
      run: |
        poetry run mypy project/ --ignore-missing-imports
    
    - name: Run tests
      run: |
        poetry run pytest project/tests -v --cov=project --cov-report=xml || echo "No tests found"
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false 